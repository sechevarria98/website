{"version":3,"sources":["components/Navigation.js","components/pages/Home.js","components/pages/Projects.js","components/utils/Button.js","components/pages/Resume.js","components/pages/Contact.js","components/utils/Themes.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","props","paths","name","svg","size","className","Object","entries","map","path","to","onClick","themeToggle","currentTheme","prototype","PropTypes","string","func","Home","Projects","JSONDATA","repositories","index","href","link","target","rel","reponame","title","description","technincal","skill","Button","window","open","pdfjs","GlobalWorkerOptions","workerSrc","version","Resume","useState","numPages","setNumPages","pageNumber","setPageNumber","file","onLoadSuccess","Contact","contacts","contact","lightTheme","body","fontColor","navbarBG","navbarBGsec","cardBG","darkTheme","GlobalStyles","createGlobalStyle","theme","Comp","exact","StyledApp","styled","div","App","setTheme","basename","process","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e5e5cdd9.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\nimport { NavLink } from 'react-router-dom';\r\nimport '../App.css';\r\n\r\nimport { FaHome as Home, FaFilePdf as Resume,\r\nFaFire as Contact, FaDatabase as Project, FaBars as Menu,\r\nFaRegLightbulb as Dark, FaLightbulb as Light } from 'react-icons/fa';\r\n\r\nconst Navigation = ( props )  => {\r\n    const paths = {\r\n        '/': { name: \"Home\", svg: <Home size = {70}/>},\r\n        '/resume': { name: \"Resume\", svg: <Resume size = {70}/>},\r\n        '/projects': { name: \"Projects\", svg: <Project size = {70}/>},\r\n        '/contact': {name: \"Contact\", svg: <Contact size = {70}/>}\r\n    }\r\n    \r\n    return (\r\n        <nav className=\"navigation\">\r\n            <ul className=\"navbar\">\r\n                <li className=\"navitem\">\r\n                    <div className=\"menu\">\r\n                        <Menu size={40}/>\r\n                    </div>\r\n                </li>\r\n\r\n                {Object.entries(paths).map(( [path, {name, svg}]) => (     \r\n                    <NavLink className=\"links\" key = { path } to = { path }>\r\n                        <li className=\"navitem\">\r\n                            <div className = \"navlink\">\r\n                                { svg }\r\n                                <span className=\"navtext\"> { name } </span>\r\n                            </div>\r\n                        </li>\r\n                    </NavLink>      \r\n                ))}\r\n\r\n                <li className=\"navitem\">\r\n                    <div className=\"navlink\" onClick = { () => props.themeToggle() }>\r\n                        { props.currentTheme === 'Light' ? <Light size = {70}/> : <Dark size = {70}/> }\r\n                        <span className=\"navtext\">{ props.currentTheme === 'Light' ? \"Light Mode\" : \"Dark Mode\"}</span>\r\n                    </div>\r\n                </li>\r\n\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nNavigation.prototype = {\r\n    currentTheme: PropTypes.string,\r\n    themeToggle: PropTypes.func\r\n}\r\n\r\nexport default Navigation;","import '../../App.css';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div className=\"page\">\r\n            <h1>HOME</h1>\r\n\r\n            <p> Welcome to the site. </p>\r\n            <p> Feel Free to look around. </p>\r\n        </div>\r\n\r\n    );  \r\n}\r\n\r\nexport default Home;","import JSONDATA from '../../data/db.json';\r\nimport '../../App.css';\r\n\r\nconst Projects = () => {\r\n\r\n    return (\r\n        <div className=\"page\">\r\n            <h1>PROJECTS</h1>\r\n\r\n            <section className=\"projectlist\">\r\n                {JSONDATA.map((repositories, index) => (\r\n                    <article key={index} className=\"projects\">\r\n                        <header className=\"projectheader\">\r\n                        <h2><a href={repositories.link} target=\"_blank\" rel=\"noreferrer\">{repositories.reponame}</a></h2>\r\n                            <h3>{repositories.title}</h3>\r\n                        </header>\r\n                        <article className=\"projectbody\">\r\n                            <p> {repositories.description} </p>\r\n                            \r\n                            {repositories.technincal.map((skill, index)=> (\r\n                                <em key={index}>{skill}</em>\r\n                            ))}\r\n                        </article>\r\n                    </article>\r\n                ))}\r\n            </section>\r\n\r\n        </div>\r\n    );  \r\n}\r\n\r\nexport default Projects;","import PropTypes from 'prop-types'\r\n\r\nconst Button = ( props ) => {\r\n\r\n    const downloadFile = () => {\r\n        window.open(props.href, props.target);\r\n    }\r\n\r\n    return (\r\n        <>\r\n          <button className = \"download\" onClick = {downloadFile} > Download </button>  \r\n        </>\r\n    )\r\n}\r\n\r\nButton.prototype = {\r\n    href: PropTypes.string,\r\n    target: PropTypes.string\r\n}\r\n\r\nexport default Button;\r\n","import {useState} from 'react';\r\nimport {Document, Page } from 'react-pdf';\r\nimport {pdfjs} from 'react-pdf';\r\nimport Button from '../utils/Button';\r\n\r\nimport '../../App.css';\r\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.min.js`;\r\n\r\nconst Resume = () => {\r\n    const [numPages, setNumPages] = useState(null);\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n\r\n    function onDocumentLoadSuccess({ numPages }) {\r\n        setNumPages(numPages);\r\n        setPageNumber(1);\r\n    }\r\n\r\n    return (\r\n        <div className=\"page\">\r\n            <h1>RESUME</h1>\r\n            <Document\r\n                className = \"docs\"\r\n                file=\"/website/assets/docs/Echevarria_Resume.pdf\"\r\n                onLoadSuccess={onDocumentLoadSuccess}\r\n            >\r\n                <Page pageNumber={pageNumber} />\r\n                <Button href = \"/website/assets/docs/Echevarria_Resume.pdf\" target=\"_blank\"/>\r\n            </Document>\r\n            <p className=\"pagenum\">Page {pageNumber} of {numPages}</p>\r\n        </div>\r\n    );  \r\n}\r\n\r\nexport default Resume;","import {FaLinkedin as LinkedIn, FaGithub as Github,\r\nFaEnvelope as Email, FaPhone as Phone} from 'react-icons/fa';\r\n\r\nimport '../../App.css';\r\n\r\nconst Contact = () => {\r\n\r\n    const contacts = {\r\n        'email': { link: \"samechevarria2@gmail.com\", svg: <Email/> },\r\n        'phone': { link: \"7739541626\", svg: <Phone/> },\r\n        'github': { link: \"https://github.com/sechevarria98\", svg: <Github/>},\r\n        'linkedin': { link: \" https://www.linkedin.com/in/samuel-echevarria-793a80199/\", svg: <LinkedIn/> }\r\n    }\r\n\r\n    return (\r\n        <div className=\"page\">\r\n            <h1>CONTACT</h1>\r\n\r\n            <section className = \"cardlist\">\r\n                {Object.entries(contacts).map(( [contact, {link, svg}]) => (\r\n                    <article className = \"card\" key = { contact }>\r\n                        <header className = \"cardheader\">\r\n                            <h2> { svg } { contact }</h2>\r\n                            {contact === 'phone' ? <a href= { \"tel:+1\" + link }>{ link }</a> : \r\n                                <a target=\"_blank\" \r\n                                    rel=\"noreferrer\" \r\n                                    href = { contact === 'email' ? \"mailto:\" + link : link } > \r\n                                { link } </a>\r\n                            }\r\n                        </header>\r\n                    </article> \r\n                ))}\r\n\r\n            </section>\r\n\r\n        </div>\r\n\r\n    );  \r\n}\r\n\r\nexport default Contact;","import {createGlobalStyle} from 'styled-components';\r\n\r\nexport const lightTheme = {\r\n    body: '#FEF5F5',\r\n    fontColor: '#000000',\r\n    navbarBG: '#ffffff',\r\n    navbarBGsec: '#e4e4e4',\r\n    cardBG: '#ffffff'\r\n};\r\n\r\nexport const darkTheme = {\r\n    body: '#1C1C24',\r\n    fontColor: '#ffffff',\r\n    navbarBG: '#23232e',\r\n    navbarBGsec: '#141418',\r\n    cardBG: '#17141d'\r\n};\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\nbody {\r\n    background-color: ${props => props.theme.body};\r\n    color: ${props => props.theme.fontColor};\r\n}\r\n`;","import { useState } from 'react';\nimport Navigation from './components/Navigation';\nimport styled, { ThemeProvider } from 'styled-components';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\n\nimport Home from './components/pages/Home';\nimport Projects from './components/pages/Projects';\nimport Resume from './components/pages/Resume';\nimport Contact from './components/pages/Contact';\nimport { lightTheme, darkTheme, GlobalStyles } from './components/utils/Themes';\n\nconst paths = {\n  \"/\": {Comp: Home, exact: true},  \n  \"/projects\": {Comp: Projects, exact:false},\n  \"/resume\": {Comp: Resume, exact:false},\n  \"/contact\": {Comp: Contact, exact:false}\n}\n\nconst StyledApp = styled.div`\n.navigation {\n  background-color: ${props => props.theme.navbarBG};\n  color: ${props => props.theme.fontColor};\n}\n\n.menu {\n  background-color: ${props => props.theme.navbarBGsec};\n}\n\n.navigation .links {\n  color: ${props => props.theme.fontColor};\n}\n\n.card {\n  background: ${props => props.theme.cardBG};\n  color: ${props => props.theme.fontColor};\n}\n\n.cardheader a {\n  color: ${props => props.theme.fontColor};\n}\n`;\n\nexport default function App() {\n\n  const [currentTheme, setTheme] = useState(\"Light\");\n\n  const themeToggle = () => {\n    currentTheme === \"Light\" ? setTheme(\"Dark\") : setTheme(\"Light\");\n  }\n\n  return (\n    <ThemeProvider theme = { currentTheme === \"Light\" ? lightTheme : darkTheme }>\n      <GlobalStyles/>\n      <StyledApp>\n        <div className=\"app\">\n          <Router basename={process.env.PUBLIC_URL}>\n            <Navigation\n              themeToggle = {themeToggle} \n              currentTheme = {currentTheme}\n            />\n            <Switch>\n              {Object.entries(paths).map(( [path, {Comp, exact}]) => (\n                <Route\n                  key = {path}\n                  exact = { exact } \n                  path = { path } \n                  component = { Comp }\n                />\n              ))}\n            </Switch>\n          </Router>\n        </div>\n      </StyledApp>\n    </ThemeProvider>\n  );\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}